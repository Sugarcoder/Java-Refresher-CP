- Generics enable types (classes and interfaces) to be parameters when defining classes, interfaces, and methods. 

- Generics are defined using special uppercase generic type placeholders. 

Example: 

public class Calculator<T> {
  // T stands for "Type" 
  // 't' is the name of the variable
  
  private T t; 
  
  public T add(T t1, T t2) {
    return t1 + t2; 
  }
  
  public T subtract(T t1, T t2) {
    return t1 - t2; 
  }
}


// T becomes a placeholder for integer

Calculator<Integer> calc = new Calculator<Integer>();

System.out.println(calc.add(5,6));       // 11
